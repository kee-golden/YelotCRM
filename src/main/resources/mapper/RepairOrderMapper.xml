<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yelot.crm.mapper.RepairOrderMapper">
    <resultMap id="orderResultMap" type="com.yelot.crm.entity.RepairOrder">
        <id property="id" column="id"/>
        <result property="orderNo" column="order_no"/>
        <result property="status" column="status"/>
        <result property="createUserId" column="create_user_id"/>
        <result property="createUserName" column="create_user_name"/>
        <result property="approveRoleId" column="approve_user_id"/>
        <result property="pickupAt" column="pickup_at"/>
        <result property="pickupType" column="pickup_type"/>
        <result property="customerId" column="customer_id"/>
        <result property="customerName" column="customer_name"/>
        <result property="customerPhone" column="customer_phone"/>
        <result property="customerPhoneSecond" column="customer_phone_second"/>
        <result property="customerAddress" column="customer_address"/>
        <result property="advancePayment" column="advance_payment"/>
        <result property="nonPayment" column="non_payment"/>
        <result property="advancePaymentType" column="advance_payment_type"/>
        <result property="totalPayment" column="total_payment"/>
        <result property="shopId" column="shop_id"/>
        <result property="shopName" column="shop_name"/>
        <result property="imagesJson" column="images_json"/>
        <result property="productInfoJson" column="product_info_json"/>
        <result property="serviceItemIds" column="service_item_ids"/>
        <result property="imageDesc" column="image_desc"/>
        <result property="firstCategoryId" column="first_category_id"/>
        <result property="secondCategoryId" column="second_category_id"/>
        <result property="categoryName" column="category_name"/>
        <result property="firstCategoryName" column="first_category_name"/>
        <result property="secondCategoryName" column="second_category_name"/>
        <result property="brandId" column="brand_id"/>
        <result property="brandName" column="brand_name"/>
        <result property="repairDesc" column="repair_desc"/>
        <result property="createAt" column="create_at"/>
        <result property="updateAt" column="update_at"/>
        <result property="precheckImages" column="precheck_images"/>
        <result property="qccheckImages" column="qccheck_images"/>
    </resultMap>

    <select id="find" resultMap="orderResultMap">
        SELECT * from t_repair_order where id = #{id};
    </select>

    <insert id="save" useGeneratedKeys="true" keyProperty="id">
        insert into t_repair_order(order_no,status,create_user_id,approve_role_id,pickup_at,
            pickup_type,customer_id,customer_name,customer_phone,customer_address,advance_payment,non_payment,
            advance_payment_type,non_payment_type,total_payment,shop_id,images_json,image_desc,product_info_json,
            service_item_ids,first_category_id,second_category_id,brand_id,repair_desc,create_at,update_at)
            values(#{orderNo},#{status},#{createUserId},#{approveRoleId},#{pickupAt},#{pickupType},
            #{customerId},#{customerName},#{customerPhone},#{customerAddress},#{advancePayment},#{nonPayment},
            #{advancePaymentType},#{nonPaymentType},#{totalPayment},#{shopId},#{imagesJson},#{imageDesc},#{productInfoJson},
            #{serviceItemIds},#{firstCategoryId},#{secondCategoryId},#{brandId},#{repairDesc},#{createAt},#{updateAt})
    </insert>

    <update id="updateOrderStatusAndImagesPath">
        update t_repair_order set status = #{approveStatus}
        <if test="approveStatus == 16 or approveStatus == 18">
        , precheck_images = #{imagesPath}
        </if>
        <if test="approveStatus == 20 or approveStatus == 22">
            , qccheck_images = #{imagesPath}
        </if>
         where id = #{orderId}

    </update>

    <select id="countTotalPageMy" resultType="java.lang.Integer">
        select count(*) 
        from t_repair_order 
        where 1 = 1 
        <if test="create_user_id != null and create_user_id != ''">and create_user_id = #{create_user_id}</if>
        <if test="approve_role_id != null and approve_role_id != ''">and approve_role_id = #{approve_role_id}</if>
        <if test="extra_search != null and extra_search != ''">and order_no like CONCAT('%', #{extra_search}, '%')</if>
    </select>
    
    <select id="findByPageMy" resultMap="orderResultMap">
        select t.*, t1.realname create_user_name, t2.name shop_name, concat(t3.name,"->",t4.name) category_name
        from t_repair_order t, t_user t1, t_shop t2, t_category t3, t_category t4
        where t.create_user_id = t1.id
        and t.shop_id = t2.id
        and t.first_category_id = t3.id
        and t.second_category_id = t4.id
        <if test="create_user_id != null and create_user_id != ''">and create_user_id = #{create_user_id}</if>
        <if test="approve_role_id != null and approve_role_id != ''">and approve_role_id = #{approve_role_id}</if>
        <if test="extra_search != null and extra_search != ''">and order_no like CONCAT('%', #{extra_search}, '%')</if>
        order by id desc 
        limit #{pageHelper.offset},#{pageHelper.size} 
    </select>

    <select id="findServiceItemName" resultType="String">
        SELECT name from t_service_item where id = #{id};
    </select>

    <select id="countTotalPageCheckList" resultType="java.lang.Integer">
        select count(*)
        from t_repair_order
        where 1 = 1
        <if test="statusString != null and statusString != ''"> and status in (#{statusString})</if>
        <if test="extra_search != null and extra_search != ''"> and order_no like CONCAT('%', #{extra_search}, '%')</if>
    </select>

    <select id="findByPageCheckList" resultMap="orderResultMap">
        select t.*, t1.realname create_user_name, t2.name shop_name, concat(t3.name,"->",t4.name) category_name
        from t_repair_order t, t_user t1, t_shop t2, t_category t3, t_category t4
        where t.create_user_id = t1.id
        and t.shop_id = t2.id
        and t.first_category_id = t3.id
        and t.second_category_id = t4.id
        <if test="statusString != null and statusString != ''">and status in (#{statusString})</if>
        <if test="extra_search != null and extra_search != ''">and order_no like CONCAT('%', #{extra_search}, '%')</if>
        order by id desc
        limit #{pageHelper.offset},#{pageHelper.size}
    </select>

    <select id="countTotalPageCheckListAndShop" resultType="java.lang.Integer">
        select count(*)
        from t_repair_order
        where 1 = 1
        <if test="statusString != null and statusString != ''">and status in (#{statusString})</if>
        <if test="extra_search != null and extra_search != ''">and order_no like CONCAT('%', #{extra_search}, '%')</if>
        <if test="shopId != null and shopId != ''">and shop_id =  #{shopId}</if>
    </select>

    <select id="findByPageCheckListAndShop" resultMap="orderResultMap">
        select t.*, t1.realname create_user_name, t2.name shop_name, concat(t3.name,"->",t4.name) category_name
        from t_repair_order t, t_user t1, t_shop t2, t_category t3, t_category t4
        where t.create_user_id = t1.id
        and t.shop_id = t2.id
        and t.first_category_id = t3.id
        and t.second_category_id = t4.id
        <if test="statusString != null and statusString != ''">and status in (#{statusString})</if>
        <if test="extra_search != null and extra_search != ''">and order_no like CONCAT('%', #{extra_search}, '%')</if>
        <if test="shopId != null and shopId != ''">and t.shop_id =  #{shopId}</if>
        order by id desc
        limit #{pageHelper.offset},#{pageHelper.size}
    </select>

    <select id="findRepairOrderByOrderId" resultMap="orderResultMap">
        select t.*, t1.realname create_user_name, t2.name first_category_name, t3.name second_category_name, t4.name brand_name
        from t_repair_order t
        left join t_user t1 on t.create_user_id = t1.id
        left join t_category t2 on t.first_category_id = t2.id
        left join t_category t3 on t.second_category_id = t3.id
        left join t_brand t4 on t.brand_id = t4.id
        where t.id = #{orderId}
    </select>

</mapper>