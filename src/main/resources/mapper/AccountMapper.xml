<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yelot.crm.mapper.AccountMapper">
    <resultMap id="accountResultMap" type="com.yelot.crm.entity.Account">
        <id property="id" column="id"/>
        <result property="phone" column="phone"/>
        <result property="wxOpenid" column="wx_openid"/>
        <result property="wxNickname" column="wx_nickname"/>
        <result property="accountNo" column="account_no"/>
        <result property="fullName" column="full_name"/>
        <result property="email" column="email"/>
        <result property="city" column="city"/>
        <result property="expressAddress" column="express_address"/>
        <result property="interestJson" column="interest_json"/>
        <result property="createAt" column="create_at"/>
    </resultMap>

    <insert id="save" useGeneratedKeys="true" keyProperty="id">
        insert into t_account(phone,wx_openid,wx_nickname,account_no,full_name,
        express_address,hobby_json,create_at) VALUES (#{phone},#{wxOpenid},#{wxNickname},#{accountNo},#{fullName},
        #{expressAddress},#{interestJson},now());

    </insert>


    <update id="update">
        update t_account set account_no = #{accountNo},full_name=#{fullName},
                express_address = #{expressAddress},express_address=#{expressAddress},hobby_json=#{interestJson},
                create_at = #{createAt}

         where id = #{id};
    </update>
    <update id="updateFullName">
        update t_account set full_name = #{fullName} where
        <choose>
        <when test="phone != null and phone != ''">
        phone = #{phone}
        </when>
        <otherwise>
            wx_openid = #{openid}
        </otherwise>
        </choose>

    </update>
    <update id="updateEmail">
        update t_account set email = #{email} where
        <choose>
            <when test="phone != null and phone != ''">
                phone = #{phone}
            </when>
            <otherwise>
                wx_openid = #{openid}
            </otherwise>
        </choose>
    </update>
    <update id="updateCity">
        update t_account set city = #{city} where
        <choose>
            <when test="phone != null and phone != ''">
                phone = #{phone}
            </when>
            <otherwise>
                wx_openid = #{openid}
            </otherwise>
        </choose>
    </update>
    <select id="find" resultMap="accountResultMap">
        SELECT * from t_account where id = #{id} ;
    </select>
    <select id="findByOpenId" resultMap="accountResultMap">
        SELECT * from t_account where wx_openid = #{openId}
    </select>
    
    <select id="findMaxId" resultType="Integer">
        SELECT max(id) from t_account
    </select>

    <select id="countBySearch" resultType="Integer">
        select count(*) from t_account where 1 = 1
        <if test="extra_search != null and extra_search != ''">
            and (name like CONCAT('%', #{extra_search}, '%') OR phone like CONCAT('%', #{extra_search}, '%'))
        </if>
    </select>

    <select id="findBySearch" resultMap="accountResultMap">
        SELECT * from t_account where
        1 = 1
        <if test="extra_search != null and extra_search != ''">
            and  phone like CONCAT('%', #{extra_search}, '%'))
        </if>
        ORDER BY id DESC
        limit #{pageHelper.offset},#{pageHelper.size} ;

    </select>

</mapper>