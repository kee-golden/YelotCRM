<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yelot.crm.mapper.RoleMapper">
    <resultMap id="roleResultMap" type="com.yelot.crm.entity.Role">
        <id property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="code" column="code"/>
        <result property="createAt" column="create_at"/>
        <result property="updateAt" column="update_at"/>
    </resultMap>

    <sql id="roleBasicMap">
        id, name, code, create_at, update_at
    </sql>


    <insert id="insert"
            parameterType="com.yelot.crm.entity.Role">
        INSERT INTO t_role
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="code != null">
                code,
            </if>
            <if test="createAt != null">
                create_at,
            </if>
            <if test="updateAt != null">
                update_at,
            </if>

        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id},
            </if>
            <if test="name != null">
                #{name},
            </if>
            <if test="code != null">
                #{code},
            </if>
            <if test="createAt != null">
                #{createAt},
            </if>
            <if test="updateAt != null">
                #{updateAt},
            </if>

        </trim>
    </insert>

    <insert id="insertAdminRole">
        INSERT INTO t_admin_role (
            id,
            admin_id,
            role_id
        )
        VALUES (
            #{id},
            #{admiid},
            #{roleId}
        )
    </insert>

    <update id="update" parameterType="com.yelot.crm.entity.Role">
        UPDATE t_role SET
        <trim suffix="" suffixOverrides=",">
            <if test="code!=null">
                code=#{code},
            </if>
            <if test="name!=null">
                name=#{name},
            </if>

        </trim>
        WHERE id=#{id}
    </update>

    <delete id="deleteAdminRoleByAdmiid">
        DELETE FROM t_admin_role
        WHERE admin_id = #{admiid}
    </delete>

    <delete id="delete">
        DELETE FROM t_role
        WHERE id = #{id}
    </delete>

    <delete id="deleteAdminRoleByRoleId">
         DELETE FROM t_admin_role
        WHERE role_id = #{roleId}
    </delete>


    <select id="findAll" resultMap="roleResultMap">
        SELECT
        <include refid="roleBasicMap"/>
        FROM t_role
    </select>

    <select id="find" resultMap="roleResultMap">
        SELECT
        <include refid="roleBasicMap"/>
        FROM t_role
        WHERE id = #{id}
    </select>

    <select id="findByMenuId" resultMap="roleResultMap">
       SELECT *
        FROM t_role r
            LEFT JOIN role_menu rm
                ON r.id = rm.role_id
        WHERE rm.menu_id = #{menuId};
    </select>

    <select id="findByAdmiid" resultMap="roleResultMap">
        SELECT *
        FROM t_admin_role ar
            LEFT JOIN t_role r
                ON ar.role_id = r.id
        WHERE ar.admin_id = #{admiid};
    </select>

    <select id="findByRoleName" resultMap="roleResultMap">
        SELECT *
        FROM t_role
        WHERE name = #{roleName} and group_id=#{groupId};
    </select>

    <select id="findByPage" resultMap="roleResultMap">
        select * from t_role limit #{pageHelper.offset},#{pageHelper.size};
    </select>

    <select id="countTotalPage" resultType="java.lang.Integer">
        SELECT count(*) FROM t_role
    </select>


</mapper>